!copyright (C) 2006  MSC-RPN COMM  %%%RPNPHY%%%
*** S/P mosavg
      subroutine mosavg(bus_sfc, sfcsiz, ptsurf, ptsurfsiz, ni)
*
#include "impnone.cdk"
*
*Author
*     R. Larocque
*
*Revision
*
*Object
*     will take the weighted average of each mosaic tile
*     and put it into the first mosaic level
*
*Arguments
*
* bus_sfc   pointer to surface bus
* sfcsiz    size of surface bus
* ptsurf    array of pointers to surface variables
* ptsurfsiz size of ptsurf
* ni        horizontal dimension
*
*Notes:
*  It is possible to store the average in the hifhest mosaic level,
*  which would cause the first level to run as is if mosaic was
*  disabled (assuming inimos was compiled with the proper options).  
*  This can help with debugging, as both the mosaic and non-mosaic
*  information will be available at once.  
*
*
      integer ni, sfcsiz, ptsurfsiz
      integer ptsurf(ptsurfsiz)
      real bus_sfc(sfcsiz), sumfract(ni)
*
      integer var, k, i, i_frac, i_moy, i_mos, j
      character*16 nomsurf  (0:1)
*
#include "options.cdk"
*
#define DCLCHAR
#include "phy_macros_f.h"
#include "sfcbus.cdk"
#include "nbvarsurf.cdk"
#include "dimsurf.cdk"
*
      equivalence (sfcbus_c_first(0),nomsurf  (0))
*
      do var=1,nvarsurf
          if (    mosaik(var).gt.1 .and.
     $            nomsurf(var).ne.'MOSFRACT'.and.
     $            nomsurf(var).ne.'TINDEX'.and.
     $            nomsurf(var).ne.'ALVSC' .and.
     $            nomsurf(var).ne.'ALIRC' .and.
     $            nomsurf(var).ne.'LAIMAX'.and.
     $            nomsurf(var).ne.'LAIMIN'.and.
     $            nomsurf(var).ne.'VEGMA' .and.
     $            nomsurf(var).ne.'ROOTDP'.and.
     $            nomsurf(var).ne.'ZOLN'  .and.
     $            nomsurf(var).ne.'STOMR' .and.
     $            nomsurf(var).ne.'QA50'  .and.
     $            nomsurf(var).ne.'VPDA'  .and.
     $            nomsurf(var).ne.'VPDB'  .and.
     $            nomsurf(var).ne.'PSIGA' .and.
     $            nomsurf(var).ne.'PSIGB' .and.
     $            nomsurf(var).ne.'SDEPTH'.and.
     $            nomsurf(var).ne.'XSLOPE'.and.
     $            nomsurf(var).ne.'FCANMX') then
              do_avg(var) = 1
          else
              do_avg(var) = 0
          end if
      end do
*
      do var=1,nvarsurf
          if (do_avg(var).gt.0) then              
              do j=1,mul(var)
                  do i=1,ni
                      i_moy = ptsurf(var) + i - 1 +
     +                    (j-1)*ni
c uncomment next line to put average in highest mosaic level (see note)
c     +                  + (mosaik(var)-1)*ni*mul(var)
                      bus_sfc(i_moy) = 0.
                      sumfract(i) = 0.
                  end do
              end do
*
              do j=1,mul(var)
                  do i=1,ni
                        sumfract(i)=0.
                  end do
                  do i=1,ni
                      do k=2,mosaik(var)
                          i_frac = ptsurf(mosfract) + i - 1 +
     +                        (k-1)*ni
                          i_moy = ptsurf(var) + i - 1 +
     +                        (j-1)*ni
c uncomment next line to put average in highest mosaic level (see note)
c     +                      + (mosaik(var)-1)*ni*mul(var)
                          i_mos = ptsurf(var) + i - 1 +
     +                        (j-1)*ni                +
     +                        (k-1)*ni*mul(var)
                          bus_sfc(i_moy) = bus_sfc(i_mos) * bus_sfc(i_frac) +
     +                        bus_sfc(i_moy)
                          sumfract(i) = sumfract(i) + bus_sfc(i_frac)
                      end do
                  end do
                  do i=1,ni
                        i_moy = ptsurf(var) + i - 1 +
     +                      (j-1)*ni
                        bus_sfc(i_moy) = bus_sfc(i_moy) / sumfract (i)
                  end do
              end do
*
          end if
      end do
*
      return
      end
